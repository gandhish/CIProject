{
	"info": {
		"_postman_id": "fd39f4ed-dccd-47d2-9e29-3992709a4a2c",
		"name": "WRIOnboardingAdminTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HealthCheck",
			"item": [
				{
					"name": "Status Code is 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/HealthCheck",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"HealthCheck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify property appName and its value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Property: appName available and matches 'Admin'\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData).have.property('appName', 'Admin');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/HealthCheck",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"HealthCheck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify property appVersion and its value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Property: appVersion available and matches '1.0.0' matches\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData).have.property('appVersion', '1.0.0');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/HealthCheck",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"HealthCheck"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}/HealthCheck",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"HealthCheck"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ON-15: Get All Locations",
			"item": [
				{
					"name": "Status Code is 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{adminAPIURL}}/api/v1/locations",
							"host": [
								"{{adminAPIURL}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Result is an Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the result is an Array\", function () {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{adminAPIURL}}/api/v1/locations",
							"host": [
								"{{adminAPIURL}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify keys for a location JSONObject record in the Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify the keys for a location record\", function () {",
									"    var data = JSON.parse(responseBody);",
									"    data.forEach(function(item) {",
									"      pm.expect(item).to.have.all.keys('id', 'storeName', 'address', 'latitude', 'longitude'); ",
									"  });    ",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{adminAPIURL}}/api/v1/locations",
							"host": [
								"{{adminAPIURL}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{adminAPIURL}}/api/v1/locations",
							"host": [
								"{{adminAPIURL}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify that the newly added location record is available in the list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Adding a location record in the locations DB table.",
									"const postRequest = {",
									"  url: 'http://host.docker.internal:3000/locations',",
									"  method: 'POST',",
									"  header: {",
									"    'Content-Type': 'application/json'",
									"  },",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({\"storename\": \"Automated_Postman_Store\",\"address\": \"123 lexington av\",\"latitude\": 48.12,\"longitude\": 12.19})",
									"  }",
									"};",
									"pm.sendRequest(postRequest, (error, response) => {",
									"  console.log(error ? error : \"Record created in the DB\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify details for the newly added store: ‘Automated_Postman_Store’\", function () {",
									"    const response = pm.response.json();",
									"    var found = false;",
									"    for(i = 0; i < response.length ; i++)",
									"    {",
									"        if(response[i].storeName == 'Automated_Postman_Store')",
									"        {",
									"            pm.expect(response[i].address).to.eql('123 lexington av');",
									"            pm.expect(parseFloat(response[i].latitude).toFixed(2)).to.eql(\"48.12\");",
									"            pm.expect(parseFloat(response[i].longitude).toFixed(2)).to.eql(\"12.19\");",
									"            found = true;",
									"            break;",
									"        }            ",
									"    }",
									"    if(!found){",
									"        pm.expect.fail(\"Couldn't find the record\");",
									"    }",
									"",
									"    const deleteRequest = {",
									"    url: 'http://host.docker.internal:3000/locations?storename=eq.Automated_Postman_Store',",
									"    method: 'DELETE',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    }",
									"    };",
									"    pm.sendRequest(deleteRequest, (error, response) => {",
									"        console.log(error ? error : \"Record deleted from the DB\");",
									"    }); ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminAPIURL}}/api/v1/locations",
							"host": [
								"{{adminAPIURL}}"
							],
							"path": [
								"api",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ON-52 Get All Locations - Core API",
			"item": [
				{
					"name": "Status Code is 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/locations",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Result is an Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that the result is an Array\", function () {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/locations",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify keys for a JSONObject inside the array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify the keys for a location record\", function () {",
									"    var data = JSON.parse(responseBody);",
									"    data.forEach(function(item) {",
									"      pm.expect(item).to.have.all.keys('id', 'storeName', 'address', 'latitude', 'longitude'); ",
									"  });    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/locations",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify Header\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/locations",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
        {
            "key": "baseURL",
            "value": "coreapi:80"
        },
        {
            "key": "adminAPIURL",
            "value": "adminui:80"
        }
    ]
}